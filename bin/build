#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
$:.unshift File.expand_path(File.join(__dir__, '..', 'lib'))

require 'combo'
require 'fileutils'

ROOT = File.expand_path(File.join(__dir__, '..'))
DST = File.join(ROOT, 'build')

Dir.chdir(DST)

# Build the payload
PAYLOAD_BASE = 0x93FC0000
CODE_BASE = 0x800110A0

FileUtils.touch 'payload'
Combo::Patcher.patch("payload") do
  PAYLOAD_SWITCH_MM = PAYLOAD_BASE + tell
  asm(PAYLOAD_SWITCH_MM) do
    # Disable interrupts
    la   :t0, 0xa4300000
    ori  :a0, :zero, 0x0555
    sw   :a0, 0x0c, :t0

    # Wait for pending DMAs
    la   :t0, 0xa4600000
    lw   :a0, 0x10, :t0
    andi :a0, :a0, 3
    bne  :a0, :zero, -12
    nop

    # Prepare 1MiB DMA
    li :at, 0x80000
    sw :at, 0x00, :t0
    li :at, 0x12001000
    sw :at, 0x04, :t0

    # Start DMA
    li :at, 0x100000 - 1
    sw :at, 0x0c, :t0

    # Wait for DMA end
    lw   :a0, 0x10, :t0
    andi :a0, :a0, 3
    bne  :a0, :zero, -12
    nop

    # Jump to Majora
    la :ra, 0x80080000
    jr :ra
    nop
  end

  PAYLOAD_SCENE_CTOR = PAYLOAD_BASE + tell
  asm(PAYLOAD_SCENE_CTOR) do
    # Load the entrance
    la :at, 0x8011a5d0
    lw :at, 0x00, :at
    andi :at, :at, 0xfffc

    # Compare with mask shop
    xori :at, :at, 0x0530
    bne :at, :zero, 0x0c
    nop

    # Go to Majora
    j PAYLOAD_SWITCH_MM
    nop

    # Forward the call to the real scene ctor
    la :at, 0x8009a750
    jr :at
    nop
  end
end

Combo::Patcher.patch("oot/code") do
  # Replace calls to the scene constructor with calls
  # to our payload
  seek(0x800f13e8 - CODE_BASE)
  write32(PAYLOAD_SCENE_CTOR)
end

Combo::Patcher.patch("MM.z64") do
  # Patch the DMA engine
  seek(0x80093900 - 0x80080000 + 0x1000)
  asm(0) { lui :t7, 0xb200 }
end
